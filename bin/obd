#!/usr/bin/python3 -u

import os, sys ; sys.path.insert(0, os.getcwd())

from ob import k, __version__
from ob.shl import daemon, execute, parse_cli
from ob.log import level
from ob.utl import  hd

opts = [
    ('-b', '', 'store_true', False, 'daemon', 'enable daemon mode.'),
    ('-d', '', 'string', "", 'workdir', 'set working directory.'),
    ('-k', '', 'store_true', False, 'kernel', 'use saved kernel config'),
    ('-l', '', 'string', '', 'level', 'loglevel.'),
    ('-m', '', 'string', '', 'modules', 'modules to load.'),
    ('-n', '', 'string', 'obot', 'name', "program name."),
    ('-o', '', "string", "", 'options', "options to use."),
    ('-p', '', 'store_true', False, 'prompting', 'prompt for initial values.'),
    ('-r', '', 'store_true', False, 'resume', 'resume the bot.'),
    ('-s', '', 'store_true', False, 'dosave', 'save configuration files.'),
    ('-t', '', 'store_true', False, 'tables', 'dump tables.'),
    ('-v', '', 'store_true', False, 'verbose', 'enable verbose mode.'),
    ('-x', '', 'string', '', 'exclude', 'skip modules'),
    ('-z', '', 'store_true', False, 'noshell', 'disable shell.'),
    ('', '--autoload', 'store_true', False, 'autoload', 'use on demand module loading.'),
    ('', '--bork', 'store_true', False, 'bork', 'bork on exception.'),
    ('', '--cached', 'store_true', False, 'cached', 'use caching'),
    ('', '--debug', "string", "", 'debug', "enable debug mode"),
    ('', '--logdir', "string", "", 'logdir', "directory to log to."),
    ('', '--owner', "string", "", 'owner', "owner's userhost or JID."),
    ('', '--nousers', 'store_true', False, 'nousers', 'disabled users.'),
]

def main():
    parse_cli("obd", __version__, opts)
    level("debug", k.cfg.logdir or os.path.join(hd(".obot"), "logs"))
    daemon()
    k.cfg.noshell = False
    k.start()
    k.init(k.cfg.modules)
    k.wait()
        
execute(main)
os._exit(0)
