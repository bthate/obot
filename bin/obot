#!/usr/bin/env python3
# This file is placed in the Public Domain.

"main program"

# imports

import os
import readline
import time

from ob import cfg
from ob.dbs import last
from ob.ofn import format
from ob.hdl import Command
from ob.shl import Shell, op, parse
from ob.thr import launch
from ob.trm import termreset, termsave
from ob.utl import e, j
from ob.ver import __version__

# defines

cfg.debug = False
cfg.wd = e("~/.ob")
cfg.version = __version__

# classes

class Core(Shell):

    def direct(self, txt):
        print(txt)

class Console(Core):

    def poll(self):
        return Command(input("> "))

    def start(self):
        super().start()
        launch(self.input)

# functions

def exec(main):
    termsave()
    try:
        main()
    except KeyboardInterrupt:
        print("")
    except PermissionError as ex:
        print(str(ex))
    finally:
        termreset()

def main():
    last(cfg)
    parse()
    s = Shell()
    s.scandir(j(cfg.wd, "mod"))
    s.load_mod("cmd")
    s.load_mod(cfg.sets.mods)
    if cfg.res.txt:
        c = Core()
        c.clone(s)
        return c.cmd(cfg.old.txt)
    if op("c"):
        c = Console()
        c.clone(s)
        c.start()
    s.start()
    s.init(cfg.sets.mods)
    if op("rcw"):
        s.wait()

# runtime

exec(main)
